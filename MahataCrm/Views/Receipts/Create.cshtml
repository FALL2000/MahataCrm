@using System.Reflection
@model MahataCrm.Models.Receipt

@{
    ViewData["Title"] = "Create";
}

@functions {
    public static string GetEnumDisplayName(Enum value)
    {
        FieldInfo field = value.GetType().GetField(value.ToString());
        EnumDisplayNameAttribute attribute = field.GetCustomAttribute<EnumDisplayNameAttribute>();
        return attribute != null ? attribute.DisplayName : value.ToString();
    }
}

<h1>Receipt</h1>

<h4>New Receipt</h4>
<hr />
<p>
    <a class="btn btn-primary" asp-action="Create" asp-controller="Product">Add Product</a>|
    <a class="btn btn-primary" asp-action="Create" asp-controller="Customer">Add Customer</a>
</p>
<div class="container">
    <form method="post">
        <div class="row justify-content-center">
            <div class="col-lg-8">   
                <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                <div class="form-group row">
                    <div class="col-sm-6">
                        <label asp-for="PaymentType" class="control-label">Payment Type</label>
                        <select asp-for="PaymentType" class="form-control" id="payType">
                            @foreach (var value in Enum.GetValues(typeof(PaymentType)))
                            {
                                <option value="@value">@GetEnumDisplayName((PaymentType)value)</option>
                            }
                        </select>
                        <span asp-validation-for="PaymentType" class="text-danger"></span>
                    </div>
                    <div class="col-sm-6">
                        <label asp-for="CustName" class="control-label">Customer Name</label>
                        <select asp-for="CustName" id="custName" class="form-control"></select>
                        <span asp-validation-for="CustName" class="text-danger"></span>
                    </div>
                </div>
                <hr />
                <div class="form-group row">
                    <div class="col-sm-6">
                        <label  class="control-label">Product</label>
                        <select id="product" class="form-control">
                        </select>
                        <span class="text-danger"></span>
                    </div>
                    <div class="col-sm-6">
                        <label class="control-label">click here to add/remove item for product</label>
                        <button type="button" id="add-item-btn" class="btn btn-primary">Add Item</button>|<button type="button" id="remove-item-btn" class="btn btn-primary">Remove Item</button>
                    </div>
                </div>
            </div>
        </div>
        <div class="table-responsive">
            <table class="table table-bordered table-striped" id="items-table" style="width: 100%;">
                <span id="error" class="text-danger"></span>
                <thead>
                    <tr>
                        <th width="27%">Description</th>
                        <th>Price</th>
                        <th>Quantity</th>
                        <th>Code</th>
                        <th width ="20%">Tax</th>
                        <th>Tax Code</th>
                        <th>Discount Amount</th>
                    </tr>
                </thead>
                <tbody>
                    
                </tbody>
            </table>
        </div>
        <div class="row justify-content-center">
            <div class="col-lg-8">
                <div class="form-group row">
                    <div class="col-sm-4"></div>
                    <div class="col-sm-8">
                        <input id="create-btn" type="button" value="Create" class="btn btn-primary" />
                    </div>
                </div>
                <div class="form-group row">
                    <div class="col-sm-4"></div>
                    <div class="col-sm-8">
                        <a asp-action="Index">Back to List</a>
                    </div>
                </div>
            </div>
        </div>
    </form>
</div>


@section Scripts {
    <script>
        $(document).ready(function () {
            var products = [];
            var itemSelect = [];
            var receiptItems = [];
            var newRowsData = [];
            $.get('/Receipts/GetCustomers', function (data) {
                data.forEach(function (item) {
                    console.log(item);
                    var name = item.firstName + ' ' + item.lastName;
                    $('#custName').append($('<option>', { value: item.id, text: name }));
                });

                // Ajouter la fonctionnalité de recherche
                $('#custName').select2({
                    placeholder: "Select Customer",
                    theme: "bootstrap4",
                    allowClear: true
                });
            });

            $.get('/Receipts/GetProducts', function (data) {
                products = data;
                data.forEach(function (item) {
                    console.log(item);
                    $('#product').append($('<option>', { value: item.id, text: item.description }));
                });

                // Ajouter la fonctionnalité de recherche
                $('#product').select2({
                    placeholder: "Select Customer",
                    theme: "bootstrap4",
                    allowClear: true
                });
            });
            $('#add-item-btn').click(function () {
                var prod = $('#product').val();
                if (itemSelect.includes(prod)) {
                    $('#error').text('');
                    $('#error').text('This product is already exists in item');
                } else {
                    itemSelect.push(prod);
                    //$('#items-table tr:not(:first)').remove();
                    newRowsData = [];
                    const resultat = products.find((p) => p.id == prod);
                    console.log(resultat);
                    var newRows = [
                        '<input type="text" class= "form-control" value="'+ resultat.description+'" disabled/>',
                        '<input class="form-control" type = "number" value="' + resultat.price + '" disabled/>',
                        '<input class="form-control" type = "number" />',
                        '<input type="text" class= "form-control" />',
                        '<select class= "form-control"><option value="0,18">Standard 18%</option><option value="0">Zero rated 0%</option><option value="0">Special Relief 0%</option><option value="0">Exempt 0%</option></select>',
                        '<input type="text" class= "form-control" />',
                        '<input type="text" class= "form-control" />',
                    ];
                    console.log(newRows);
                    newRowsData.push(newRows);
                    $.each(newRowsData, function (index, rowData) {
                        var newRow = $('<tr id="' + prod + '">');
                        $.each(rowData, function (idx, val) {
                            newRow.append('<td>' + val + '</td>');
                        });
                        $('#items-table').append(newRow);
                    });
                }
            });
            $('#remove-item-btn').click(function () {
                var prod = $('#product').val();
                var index = itemSelect.indexOf(prod);
                if (index === -1) {
                    $('#error').text('');
                    $('#error').text("This product doesn't exists in item");
                } else {
                    itemSelect.splice(index, 1);
                    $('#items-table tr#' + prod).remove();
                }
            });
            $('#create-btn').click(function () {
                var bool = true;
                var dataItem = [];
                $('#items-table tr:gt(0)').each(function () {
                    var item = {};
                    var i = 0;
                    $(this).find('input').each(function () {
                        if (i == 0) {
                            item.Description = $(this).val();
                        }
                        if (i == 1) {
                            item.Price = $(this).val();
                        }
                        if (i == 2) {
                            if ($(this).val() == '') {
                                $('#error').text("Quantity is required");
                                bool = false;
                            } else {
                                if ($(this).val() <= 0) {
                                    $('#error').text('Quantity must be greather than 0');
                                    bool = false;
                                } else {
                                    item.Quantity = $(this).val();
                                }
                            }
                        }
                        if (i == 3) {
                            item.Code = $(this).val();
                        }
                        if (i == 4) {
                            item.Tax = $(this).val();
                            console.log(item.Tax);
                        }
                        if (i == 5) {
                            item.TaxCode = $(this).val();
                        }
                        if (i == 6) {
                            item.DiscountAmount = $(this).val();
                        }
                        i++;
                    });
                    item.IsNew = true;
                    dataItem.push(item);
                });
                if (bool) {
                    var receipt = {
                        CustName: $('#custName').val(),
                        PaymentType: $('#payType').val()
                    };
                    $.ajax({
                        url: '/Receipts/CreateReceipt',
                        type: 'POST',
                        data: { receipt: receipt, ReceiptItems: dataItem },
                        success: function (response) {
                            window.location.href = response.url;
                            console.log(response);
                        },
                        error: function (xhr, status, error) {
                            console.log(error);
                        }
                    });
                } 
            });
        });
           
        
    </script>
}

